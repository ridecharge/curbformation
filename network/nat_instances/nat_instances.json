{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "NAT Instance for Private Routing Creation v1.0",
  "Parameters": {
    "Environment": {
      "Description": "Name of the environment this VPC represents",
      "Type": "String",
      "MinLength": "4",
      "MaxLength": "14",
      "AllowedPattern": "[-_ a-zA-Z0-9]*",
      "ConstraintDescription": "can contain only alphanumeric characters, spaces, dashes and underscores."
    },
    "VpcId": {
      "Description": "VPC for this route.",
      "Type": "String",
      "MinLength": "12",
      "MaxLength": "12",
      "AllowedPattern": "vpc-[a-z0-9]*",
      "ConstraintDescription": "Must be a valid VPC id."
    },
    "CidrBlock": {
      "Description": "Cidr Address for the VPC to create the instances in.",
      "Type": "String",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    },
    "PublicSubnetIds": {
      "Description": "Subnets to associate public routing.",
      "Type": "CommaDelimitedList"
    },
    "PrivateRouteTables": {
      "Description": "Routes to associate private subnets.",
      "Type": "CommaDelimitedList"
    }
  },
  "Outputs": {
    "NATInstanceIdA": {
      "Value": {
        "Fn::GetAtt": [
          "NATInstanceA",
          "Outputs.InstanceId"
        ]
      }
    },
    "NATInstanceIdB": {
      "Value": {
        "Fn::GetAtt": [
          "NATInstanceA",
          "Outputs.InstanceId"
        ]
      }
    }
  },
  "Resources": {
    "NATInstanceA": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "Parameters": {
          "Environment": {
            "Ref": "Environment"
          },
          "NATRoleProfile": {
            "Ref": "NATRoleProfile"
          },
          "NATSecurityGroup": {
            "Ref": "NATSecurityGroup"
          },
          "PublicSubnet": {
            "Fn::Select": [
              "0",
              {
                "Ref": "PublicSubnetIds"
              }
            ]
          },
          "PrivateRouteTables": {
            "Fn::Join": [
              ",",
              [
                {
                  "Fn::Select": [
                    "0",
                    {
                      "Ref": "PrivateRouteTables"
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    "1",
                    {
                      "Ref": "PrivateRouteTables"
                    }
                  ]
                }
              ]
            ]
          }
        },
        "TemplateURL": "https://s3.amazonaws.com/cf-templates-curb/network/nat_instances/nat_instance.json",
        "TimeoutInMinutes": "30"
      }
    },
    "NATInstanceB": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "Parameters": {
          "Environment": {
            "Ref": "Environment"
          },
          "NATRoleProfile": {
            "Ref": "NATRoleProfile"
          },
          "NATSecurityGroup": {
            "Ref": "NATSecurityGroup"
          },
          "PublicSubnet": {
            "Fn::Select": [
              "1",
              {
                "Ref": "PublicSubnetIds"
              }
            ]
          },
          "PrivateRouteTables": {
            "Fn::Join": [
              ",",
              [
                {
                  "Fn::Select": [
                    "1",
                    {
                      "Ref": "PrivateRouteTables"
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    "0",
                    {
                      "Ref": "PrivateRouteTables"
                    }
                  ]
                }
              ]
            ]
          }
        },
        "TemplateURL": "https://s3.amazonaws.com/cf-templates-curb/network/nat_instances/nat_instance.json",
        "TimeoutInMinutes": "30"
      }
    },
    "NATRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "ec2.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyName": "NAT_Takeover",
            "PolicyDocument": {
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "ec2:DescribeInstances",
                    "ec2:DescribeRouteTables",
                    "ec2:CreateRoute",
                    "ec2:ReplaceRoute",
                    "ec2:StartInstances",
                    "ec2:StopInstances"
                  ],
                  "Resource": "*"
                }
              ]
            }
          }
        ]
      }
    },
    "NATRoleProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Path": "/",
        "Roles": [
          {
            "Ref": "NATRole"
          }
        ]
      }
    },
    "NATSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Rules for allowing access to NAT HA Nodes",
        "VpcId": {
          "Ref": "VpcId"
        },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "-1",
            "FromPort": "0",
            "ToPort": "65535",
            "CidrIp": {
              "Ref": "CidrBlock"
            }
          }
        ],
        "SecurityGroupEgress": [
          {
            "IpProtocol": "-1",
            "FromPort": "0",
            "ToPort": "65535",
            "CidrIp": "0.0.0.0/0"
          }
        ]
      }
    },
    "NATAllowICMP": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "GroupId": {
          "Ref": "NATSecurityGroup"
        },
        "IpProtocol": "icmp",
        "FromPort": "-1",
        "ToPort": "-1",
        "SourceSecurityGroupId": {
          "Ref": "NATSecurityGroup"
        }
      }
    }
  }
}