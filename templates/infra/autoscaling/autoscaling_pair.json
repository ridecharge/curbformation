{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": " v1.0 Creates an Autoscaling HA pair of Instances for a Service",
  "Parameters": {
    "Environment": {
      "Description": "Name of the environment to launch services into.",
      "Type": "String",
      "MinLength": "4",
      "MaxLength": "8",
      "AllowedPattern": "[a-z0-9]*",
      "ConstraintDescription": "Can contain 4 to 8 lower case alphanumeric characters."
    },
    "InstanceType": {
      "Description": "Instance type for instance pair.",
      "Type": "String",
      "Default": "c3.large",
      "AllowedValues": [
        "c3.large"
      ],
      "ConstraintDescription": "must be a valid EC2 instance type."
    },
    "SecurityGroups": {
      "Description": "Security Groups for the instances",
      "Type": "CommaDelimitedList"
    },
    "KeyName": {
      "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instances",
      "Type": "String",
      "MinLength": "1",
      "MaxLength": "64",
      "Default": "bootstrap",
      "AllowedPattern": "[-_ a-zA-Z0-9]*",
      "ConstraintDescription": "can contain only alphanumeric characters, spaces, dashes and underscores."
    },
    "InstanceProfile": {
      "Description": "IAM Instance Profile for instances",
      "Type": "String"
    },
    "AvailabilityZones": {
      "Description": "AvailabilityZones to launch networking stacks into.",
      "Type": "CommaDelimitedList"
    },
    "Subnets": {
      "Description": "Subnets to launch NATs into.",
      "Type": "List<AWS::EC2::Subnet::Id>"
    },
    "ImageId": {
      "Description": "AMI to create instances.",
      "Type": "String",
      "AllowedPattern": "ami-[a-z0-9]{8}",
      "ConstraintDescription": "Must be a valid ami id"
    },
    "VpcName": {
      "Description": "Name of the vpc this nat is created in.",
      "Type": "String"
    },
    "UserData": {
      "Description": "Userdata to pass to instance startup.",
      "Type": "String",
      "Default": ""
    },
    "Type": {
      "Type": "String",
      "AllowedValues": [
        "NAT",
        "Bastion",
        "NTP"
      ]
    }
  },
  "Mappings": {
    "Types": {
      "NAT": {
        "public": true
      },
      "Bastion": {
        "public": true
      },
      "NTP": {
        "public": false
      }
    }
  },
  "Resources": {
    "AsgLaunchConfiguration": {
      "Type": "AWS::AutoScaling::LaunchConfiguration",
      "Properties": {
        "AssociatePublicIpAddress": {
          "Fn::FindInMap": [
            "Types",
            {"Ref": "Type"},
            "public"
          ]
        },
        "EbsOptimized": false,
        "IamInstanceProfile": {
          "Ref": "InstanceProfile"
        },
        "ImageId": {
          "Ref": "ImageId"
        },
        "InstanceType": {
          "Ref": "InstanceType"
        },
        "KeyName": {
          "Ref": "KeyName"
        },
        "SecurityGroups": {
          "Ref": "SecurityGroups"
        },
        "UserData": {
          "Fn::Base64": {
            "Ref": "UserData"
          }
        }
      }
    },
    "AutoScalingGroup": {
      "UpdatePolicy": {
        "AutoScalingRollingUpdate": {
          "MinInstancesInService": "1",
          "MaxBatchSize": "1",
          "PauseTime": "PT3M30S"
        }
      },
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {
        "AvailabilityZones": {
          "Ref": "AvailabilityZones"
        },
        "Cooldown": "30",
        "DesiredCapacity": "2",
        "HealthCheckGracePeriod": "30",
        "HealthCheckType": "EC2",
        "LaunchConfigurationName": {
          "Ref": "AsgLaunchConfiguration"
        },
        "MaxSize": "2",
        "MinSize": "2",
        "VPCZoneIdentifier": {
          "Ref": "Subnets"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Ref": "Environment"
                  },
                  {
                    "Ref": "VpcName"
                  },
                  {
                    "Ref": "Type"
                  }
                ]
              ]
            },
            "PropagateAtLaunch": "true"
          },
          {
            "Key": "Environment",
            "Value": {
              "Ref": "Environment"
            },
            "PropagateAtLaunch": "true"
          }
        ]
      }
    }
  }
}

