{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "VPCs Configuration v1.0",
  "Parameters": {
    "Environment": {
      "Description": "Name of the environment to launch these VPCs into.",
      "Type": "String",
      "MinLength": "4",
      "MaxLength": "8",
      "AllowedPattern": "[a-z0-9]*",
      "ConstraintDescription": "Can contain 4 to 8 lower case alphanumeric characters."
    },
    "TemplateURLPrefix": {
      "Description": "Template URL prefix for nested stacks.",
      "Type": "String"
    },
    "HostedZone": {
      "Type": "String"
    },
    "AvailabilityZones": {
      "Description": "AvailabilityZones to launch networking stacks into.",
      "Type": "String"
    },
    "VpcName": {
      "Type": "String",
      "AllowedValues": [
        "Infrastructure",
        "Application"
      ]
    },
    "Vpc": {
      "Description": "VPC to launch this subnet into.",
      "Type": "AWS::EC2::VPC::Id"
    },
    "CidrBlock": {
      "Description": "Cidr Address for the VPC to create the instances in.",
      "Type": "String",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    },
    "PublicSubnets": {
      "Description": "Subnets to associate public routing.",
      "Type": "String"
    },
    "PrivateSubnets": {
      "Description": "Subnets to associate private routing.",
      "Type": "String"
    },
    "NATImageId": {
      "Type": "String"
    },
    "BastionImageId": {
      "Type": "String"
    },
    "NTPImageId": {
      "Type": "String"
    }
  },
  "Conditions": {
    "CreateNTPInstances": {
      "Fn::Equals": [
        {"Ref": "VpcName"},
        "Infrastructure"
      ]
    }
  },
  "Resources": {
    "SecurityGroups": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "Parameters": {
          "Environment": {
            "Ref": "Environment"
          },
          "TemplateURLPrefix": {
            "Ref": "TemplateURLPrefix"
          },
          "Vpc": {"Ref": "Vpc"},
          "CidrBlock": {"Ref": "CidrBlock"}
        },
        "TemplateURL": {
          "Fn::Join": [
            "/",
            [
              {
                "Ref": "TemplateURLPrefix"
              },
              "infra/security_groups/security_groups.json"
            ]
          ]
        },
        "TimeoutInMinutes": "30"
      }
    },
    "InstanceProfiles": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "Parameters": {
          "Environment": {
            "Ref": "Environment"
          },
          "TemplateURLPrefix": {
            "Ref": "TemplateURLPrefix"
          },
          "HostedZone": {
            "Ref": "HostedZone"
          }
        },
        "TemplateURL": {
          "Fn::Join": [
            "/",
            [
              {
                "Ref": "TemplateURLPrefix"
              },
              "infra/instance_profiles/instance_profiles.json"
            ]
          ]
        },
        "TimeoutInMinutes": "30"
      }
    },
    "Instances": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "Parameters": {
          "Environment": {
            "Ref": "Environment"
          },
          "AvailabilityZones": {
            "Ref": "AvailabilityZones"
          },
          "TemplateURLPrefix": {
            "Ref": "TemplateURLPrefix"
          },
          "ExternalBastionSecurityGroup": {
            "Fn::GetAtt": [
              "SecurityGroups",
              "Outputs.ExternalBastionSecurityGroup"
            ]
          },
          "InternalBastionSecurityGroup": {
            "Fn::GetAtt": [
              "SecurityGroups",
              "Outputs.InternalBastionSecurityGroup"
            ]
          },
          "NTPSecurityGroup": {
            "Fn::GetAtt": [
              "SecurityGroups",
              "Outputs.NTPSecurityGroup"
            ]
          },
          "NATSecurityGroup": {
            "Fn::GetAtt": [
              "SecurityGroups",
              "Outputs.NATSecurityGroup"
            ]
          },
          "NATInstanceProfile": {
            "Fn::GetAtt": [
              "InstanceProfiles",
              "Outputs.NATInstanceProfile"
            ]
          },
          "DNSInstanceProfile": {
            "Fn::GetAtt": [
              "InstanceProfiles",
              "Outputs.DNSInstanceProfile"
            ]
          },
          "HostedZone": {
            "Ref": "HostedZone"
          },
          "PublicSubnets": {
            "Ref": "PublicSubnets"
          },
          "PrivateSubnets": {
            "Ref": "PrivateSubnets"
          },
          "NATImageId": {
            "Ref": "NATImageId"
          },
          "BastionImageId": {
            "Ref": "BastionImageId"
          },
          "NTPImageId": {
            "Ref": "NTPImageId"
          },
          "VpcName": {
            "Ref": "VpcName"
          },
          "Vpc": {
            "Ref": "Vpc"
          }
        },
        "TemplateURL": {
          "Fn::Join": [
            "/",
            [
              {
                "Ref": "TemplateURLPrefix"
              },
              "infra/instances/instances.json"
            ]
          ]
        },
        "TimeoutInMinutes": "30"
      }
    }
  }
}

