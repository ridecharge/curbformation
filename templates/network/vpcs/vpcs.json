{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "v1.0 Creates VPCs for environment.",
  "Parameters": {
    "Environment": {
      "Description": "Name of the environment to launch these VPCs into.",
      "Type": "String",
      "MinLength": "4",
      "MaxLength": "8",
      "AllowedPattern": "[a-z0-9]*",
      "ConstraintDescription": "Can contain 4 to 8 lower case alphanumeric characters."
    },
    "TemplateURLPrefix": {
      "Description": "Template URL prefix for nested stacks.",
      "Type": "String"
    },
    "AvailabilityZones": {
      "Description": "AvailabilityZones to launch networking stacks into.",
      "Type": "String"
    },
    "NATImageId": {
      "Type": "String",
      "AllowedPattern": "ami-[a-z0-9]{8}",
      "ConstraintDescription": "Must be a valid ami id"
    },
    "BastionImageId": {
      "Type": "String",
      "AllowedPattern": "ami-[a-z0-9]{8}",
      "ConstraintDescription": "Must be a valid ami id"
    },
    "NTPImageId": {
      "Type": "String",
      "AllowedPattern": "ami-[a-z0-9]{8}",
      "ConstraintDescription": "Must be a valid ami id"
    }
  },
  "Outputs": {
    "ApplicationVPC": {
      "Value": {
        "Fn::GetAtt": [
          "ApplicationVPC",
          "Outputs.Vpc"
        ]
      }
    },
    "InfrastructureVPC": {
      "Value": {
        "Fn::GetAtt": [
          "InfrastructureVPC",
          "Outputs.Vpc"
        ]
      }
    },
    "ApplicationVPCPrivateSubnets": {
      "Value": {
        "Fn::GetAtt": [
          "ApplicationVPC",
          "Outputs.PrivateSubnets"
        ]
      }
    },
    "InfrastructureVPCPrivateSubnets": {
      "Value": {
        "Fn::GetAtt": [
          "InfrastructureVPC",
          "Outputs.PrivateSubnets"
        ]
      }
    },
    "ApplicationVPCPublicSubnets": {
      "Value": {
        "Fn::GetAtt": [
          "ApplicationVPC",
          "Outputs.PublicSubnets"
        ]
      }
    },
    "InfrastructureVPCPublicSubnets": {
      "Value": {
        "Fn::GetAtt": [
          "InfrastructureVPC",
          "Outputs.PublicSubnets"
        ]
      }
    },
    "InfrastructureVPCDBSubnetGroup": {
      "Value": {
        "Fn::GetAtt": [
          "InfrastructureVPC",
          "Outputs.DBSubnetGroup"
        ]
      }
    },
    "ApplicationVPCDBSubnetGroup": {
      "Value": {
        "Fn::GetAtt": [
          "ApplicationVPC",
          "Outputs.DBSubnetGroup"
        ]
      }
    },
    "PublicHostedZoned": {
      "Value": {
        "Ref": "PublicHostedZone"
      }
    }
  },
  "Resources": {
    "ApplicationVPC": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "Parameters": {
          "Environment": {
            "Ref": "Environment"
          },
          "CidrBlockPrefix": "10.250",
          "AvailabilityZones": {
            "Ref": "AvailabilityZones"
          },
          "VpcName": "Application",
          "TemplateURLPrefix": {
            "Ref": "TemplateURLPrefix"
          }
        },
        "TemplateURL": {
          "Fn::Join": [
            "/",
            [
              {
                "Ref": "TemplateURLPrefix"
              },
              "network/vpcs/vpc.json"
            ]
          ]
        },
        "TimeoutInMinutes": "30"
      }
    },
    "InfrastructureVPC": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "Parameters": {
          "Environment": {
            "Ref": "Environment"
          },
          "VpcName": "Infrastructure",
          "CidrBlockPrefix": "10.251",
          "AvailabilityZones": {
            "Ref": "AvailabilityZones"
          },
          "TemplateURLPrefix": {
            "Ref": "TemplateURLPrefix"
          }
        },
        "TemplateURL": {
          "Fn::Join": [
            "/",
            [
              {
                "Ref": "TemplateURLPrefix"
              },
              "network/vpcs/vpc.json"
            ]
          ]
        },
        "TimeoutInMinutes": "30"
      }
    },
    "VpcPeering": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "Parameters": {
          "Environment": {
            "Ref": "Environment"
          },
          "VpcA": {
            "Fn::GetAtt": [
              "InfrastructureVPC",
              "Outputs.Vpc"
            ]
          },
          "VpcB": {
            "Fn::GetAtt": [
              "ApplicationVPC",
              "Outputs.Vpc"
            ]
          },
          "VpcAPrivateRouteTableA": {
            "Fn::GetAtt": [
              "InfrastructureVPC",
              "Outputs.PrivateRouteTableA"
            ]
          },
          "VpcAPrivateRouteTableB": {
            "Fn::GetAtt": [
              "InfrastructureVPC",
              "Outputs.PrivateRouteTableB"
            ]
          },
          "VpcBPrivateRouteTableA": {
            "Fn::GetAtt": [
              "ApplicationVPC",
              "Outputs.PrivateRouteTableA"
            ]
          },
          "VpcBPrivateRouteTableB": {
            "Fn::GetAtt": [
              "ApplicationVPC",
              "Outputs.PrivateRouteTableB"
            ]
          },
          "VpcAPublicRouteTable": {
            "Fn::GetAtt": [
              "InfrastructureVPC",
              "Outputs.PublicRouteTable"
            ]
          },
          "VpcBPublicRouteTable": {
            "Fn::GetAtt": [
              "ApplicationVPC",
              "Outputs.PublicRouteTable"
            ]
          },
          "VpcACidrBlock": {
            "Fn::GetAtt": [
              "InfrastructureVPC",
              "Outputs.CidrBlock"
            ]
          },
          "VpcBCidrBlock": {
            "Fn::GetAtt": [
              "ApplicationVPC",
              "Outputs.CidrBlock"
            ]
          },
          "TemplateURLPrefix": {
            "Ref": "TemplateURLPrefix"
          }
        },
        "TemplateURL": {
          "Fn::Join": [
            "/",
            [
              {
                "Ref": "TemplateURLPrefix"
              },
              "network/vpcs/vpc_peering.json"
            ]
          ]
        },
        "TimeoutInMinutes": "30"
      }
    },
    "InfrastructureVPCInstances": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "Parameters": {
          "Environment": {
            "Ref": "Environment"
          },
          "NATImageId": {
            "Ref": "NATImageId"
          },
          "VpcName": "Infrastructure",
          "CidrBlock": {
            "Fn::GetAtt": [
              "InfrastructureVPC",
              "Outputs.CidrBlock"
            ]
          },
          "PrivateSubnets": {
            "Fn::GetAtt": [
              "InfrastructureVPC",
              "Outputs.PrivateSubnets"
            ]
          },
          "PublicSubnets": {
            "Fn::GetAtt": [
              "InfrastructureVPC",
              "Outputs.PublicSubnets"
            ]
          },
          "Vpc": {
            "Fn::GetAtt": [
              "InfrastructureVPC",
              "Outputs.Vpc"
            ]
          },
          "NTPImageId": {
            "Ref": "NTPImageId"
          },
          "BastionImageId": {
            "Ref": "BastionImageId"
          },
          "TemplateURLPrefix": {
            "Ref": "TemplateURLPrefix"
          },
          "HostedZone": "Z2FOYNIZLTFYNJ",
          "AvailabilityZones": {
            "Ref": "AvailabilityZones"
          }
        },
        "TemplateURL": {
          "Fn::Join": [
            "/",
            [
              {
                "Ref": "TemplateURLPrefix"
              },
              "infra/infra.json"
            ]
          ]
        },
        "TimeoutInMinutes": "30"
      }
    },
    "ApplicationVPCInstances": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "Parameters": {
          "Environment": {
            "Ref": "Environment"
          },
          "NATImageId": {
            "Ref": "NATImageId"
          },
          "VpcName": "Application",
          "CidrBlock": {
            "Fn::GetAtt": [
              "ApplicationVPC",
              "Outputs.CidrBlock"
            ]
          },
          "PrivateSubnets": {
            "Fn::GetAtt": [
              "ApplicationVPC",
              "Outputs.PrivateSubnets"
            ]
          },
          "PublicSubnets": {
            "Fn::GetAtt": [
              "ApplicationVPC",
              "Outputs.PublicSubnets"
            ]
          },
          "Vpc": {
            "Fn::GetAtt": [
              "ApplicationVPC",
              "Outputs.Vpc"
            ]
          },
          "NTPImageId": {
            "Ref": "NTPImageId"
          },
          "HostedZone": "Z2FOYNIZLTFYNJ",
          "BastionImageId": {
            "Ref": "BastionImageId"
          },
          "TemplateURLPrefix": {
            "Ref": "TemplateURLPrefix"
          },
          "AvailabilityZones": {
            "Ref": "AvailabilityZones"
          }
        },
        "TemplateURL": {
          "Fn::Join": [
            "/",
            [
              {
                "Ref": "TemplateURLPrefix"
              },
              "infra/infra.json"
            ]
          ]
        },
        "TimeoutInMinutes": "30"
      }
    },
    "PublicHostedZone": {
      "Type": "AWS::Route53::HostedZone",
      "Properties": {
        "HostedZoneConfig": {
          "Comment": {
            "Fn::Join": [
              " ",
              [
                "Public Hosted Zone for",
                {
                  "Ref": "Environment"
                }
              ]
            ]
          },
          "Name": {
            "Fn::Join": [
              ".",
              [
                {
                  "Ref": "Environment"
                },
                "gc"
              ]
            ]
          }
        }
      }
    }
  }
}
