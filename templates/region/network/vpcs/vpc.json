{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "VPC Creation v1.0",
  "Parameters": {
    "Environment": {
      "Description": "Name of the environment this VPC represents",
      "Type": "String",
      "MinLength": "4",
      "MaxLength": "14",
      "AllowedPattern": "[a-z0-9]*",
      "ConstraintDescription": "can contain only lower case alphanumeric characters."
    },
    "CidrBlockPrefix": {
      "Description": "CidrBlock for this VPC",
      "Type": "String",
      "MinLength": "3",
      "MaxLength": "7",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})",
      "ConstraintDescription": "Must be the first 2 bytes of a CidrBlock"
    },
    "TemplateURLPrefix": {
      "Description": "Template URL for a VPC.",
      "Type": "String"
    },
    "VpcName": {
      "Type": "String"
    },
    "AvailabilityZones": {
      "Description": "AvailabilityZones to launch networking stacks into.",
      "Type": "String"
    }
  },
  "Outputs": {
    "Vpc": {
      "Value": {
        "Ref": "VPC"
      }
    },
    "PrivateSubnets": {
      "Value": {
        "Fn::GetAtt": [
          "Subnets",
          "Outputs.PrivateSubnets"
        ]
      }
    },
    "DBSubnetGroup": {
      "Value": {
        "Fn::GetAtt": [
          "Subnets",
          "Outputs.DBSubnetGroup"
        ]
      }
    }
  },
  "Resources": {
    "VPC": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": {
          "Fn::Join": [
            ".",
            [
              {
                "Ref": "CidrBlockPrefix"
              },
              "0.0/16"
            ]
          ]
        },
        "EnableDnsSupport": true,
        "EnableDnsHostnames": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Ref": "VpcName"
            }
          },
          {
            "Key": "Environment",
            "Value": {
              "Ref": "Environment"
            }
          }
        ]
      }
    },
    "InternetGateway": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Ref": "AWS::StackName"
            }
          },
          {
            "Key": "Environment",
            "Value": {
              "Ref": "Environment"
            }
          },
          {
            "Key": "Network",
            "Value": "Public"
          }
        ]
      }
    },
    "AttachGateway": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "InternetGatewayId": {
          "Ref": "InternetGateway"
        }
      }
    },
    "Subnets": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "Parameters": {
          "Environment": {
            "Ref": "Environment"
          },
          "CidrBlockPrefix": {
            "Ref": "CidrBlockPrefix"
          },
          "TemplateURLPrefix": {
            "Ref": "TemplateURLPrefix"
          },
          "Vpc": {
            "Ref": "VPC"
          },
          "AvailabilityZones": {
            "Ref": "AvailabilityZones"
          }
        },
        "TemplateURL": {
          "Fn::Join": [
            "/",
            [
              {
                "Ref": "TemplateURLPrefix"
              },
              "subnets.json"
            ]
          ]
        },
        "TimeoutInMinutes": "30"
      }
    },
    "Routes": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "Parameters": {
          "Environment": {
            "Ref": "Environment"
          },
          "PublicSubnets": {
            "Fn::GetAtt": [
              "Subnets",
              "Outputs.PublicSubnets"
            ]
          },
          "TemplateURLPrefix": {
            "Ref": "TemplateURLPrefix"
          },
          "PrivateSubnets": {
            "Fn::GetAtt": [
              "Subnets",
              "Outputs.PrivateSubnets"
            ]
          },
          "Vpc": {
            "Ref": "VPC"
          },
          "InternetGateway": {
            "Ref": "InternetGateway"
          },
          "CidrBlock": {
            "Fn::Join": [
              ".",
              [
                {
                  "Ref": "CidrBlockPrefix"
                },
                "0.0/16"
              ]
            ]
          }
        },
        "TemplateURL": {
          "Fn::Join": [
            "/",
            [
              {
                "Ref": "TemplateURLPrefix"
              },
              "routes.json"
            ]
          ]
        },
        "TimeoutInMinutes": "30"
      }
    }
  }
}
